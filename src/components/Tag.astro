---
interface Props {
  tag: string;
}

interface Colors {
  [key: string]: string;
}

const { tag } = Astro.props;

// Basic styling - customize as needed!
const colors: Colors = {
    default: 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500',
    astro: 'bg-orange-200 text-orange-800 hover:bg-orange-300 dark:bg-orange-700 dark:text-orange-100 dark:hover:bg-orange-600',
    tailwind: 'bg-cyan-200 text-cyan-800 hover:bg-cyan-300 dark:bg-cyan-700 dark:text-cyan-100 dark:hover:bg-cyan-600',
    javascript: 'bg-yellow-200 text-yellow-800 hover:bg-yellow-300 dark:bg-yellow-600 dark:text-yellow-100 dark:hover:bg-yellow-500',
    react: 'bg-blue-200 text-blue-800 hover:bg-blue-300 dark:bg-blue-700 dark:text-blue-100 dark:hover:bg-blue-600',
    // Add more specific tag colors if you like
};

const tagClass = colors[tag.toLowerCase()] || colors.default;

// Optional: Link tags to a future tag search page
// const tagUrl = `/tags/${tag.toLowerCase().replace(/\s+/g, '-')}/`;
---
<span class={`inline-block rounded-full px-3 py-1 text-xs font-medium mr-2 mb-2 transition-colors duration-200 ${tagClass}`}>
  #{tag}
</span>
<!-- If linking tags:
<a href={tagUrl} class={`inline-block rounded-full px-3 py-1 text-xs font-medium mr-2 mb-2 transition-colors duration-200 ${tagClass}`}>
  #{tag}
</a>
-->